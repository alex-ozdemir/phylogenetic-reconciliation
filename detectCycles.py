import copy


def findRoot(Tree):
	"""This function takes in a tree and returns a string with the name of the root vertex of the tree"""

	if 'pTop' in Tree:
		return Tree['pTop'][1]
	return Tree['hTop'][1]


def InitDicts(tree):
	"""This function takes as input a tree dictionary and returns a dictionary with all of the bottom nodes 
	of the edges as keys and empty lists as values."""

	treeDict = {}
	for key in tree:
		if key == 'pTop':
			treeDict[tree[key][1]] = [] 
		elif key == 'hTop':
			treeDict[tree[key][1]] = []
		else:
			treeDict[key[1]] = []
	return treeDict


def treeFormat(tree):
	"""Takes a tree in the format that it comes out of newickFormatReader and converts it into a dictionary
	with keys which are the bottom nodes of the edge and values which are the children."""

	treeDict = InitDicts(tree)
	treeRoot = findRoot(tree)
	for key in tree:
		if key == 'hTop' or key == 'pTop':
			if tree[key][-2] == None:
				treeDict[treeRoot] = treeDict[treeRoot] + [tree[key][-2]]
			else:
				treeDict[treeRoot] = treeDict[treeRoot] + [tree[key][-2][1]]
			if tree[key][-1] == None:
				treeDict[treeRoot] = treeDict[treeRoot] + [tree[key][-1]]
			else:
				treeDict[treeRoot] = treeDict[treeRoot] + [tree[key][-1][1]]
		else:
			if tree[key][-2] == None:
				treeDict[key[1]] = treeDict[key[1]] + [tree[key][-2]]
			else:
				treeDict[key[1]] = treeDict[key[1]] + [tree[key][-2][1]]
			if tree[key][-1] == None:
				treeDict[key[1]] = treeDict[key[1]] + [tree[key][-1]]
			else:
				treeDict[key[1]] = treeDict[key[1]] + [tree[key][-1][1]]
	return treeDict


def parentsDict(H, P):
	"""Takes a host and a parasite tree with edges as keys and returns a dictionary with 
	keys which are the bottom nodes of those edges and values which are the top nodes of 
	those edges."""

	parentsDict = {}
	for key in H:
		if key == 'hTop':
			parentsDict[H[key][1]] = H[key][0]
		else:
			parentsDict[key[1]] = H[key][0]
	for key in P:
		if key == 'pTop':
			parentsDict[P[key][1]] = P[key][0]
		else:
			parentsDict[key[1]] = P[key][0]
	return parentsDict


def uniquify(list):
	"""Takes as input a list and returns a list containing only the unique elements of 
	the input list."""

	keys = {}
	for e in list:
		keys[e] = 1
	return keys.keys()


def buildReconciliation(HostTree, ParasiteTree, reconciliation):
	"""Takes as input a host tree, a parasite tree, and a reconciliation, and returns a graph where the
	keys are host or parasite nodes, and the values are a list of the children of a particular node. The
	graph represents temporal relationships between events."""

	parents = parentsDict(HostTree, ParasiteTree)
	H = treeFormat(HostTree)
	P = treeFormat(ParasiteTree)
	reconGraph = H
	reconGraph.update(P) 
	transferList = []
	for key in reconciliation:
		if reconciliation[key][0] == 'T':
			reconGraph[key[0]] = P[key[0]] + [reconciliation[key][1][1], reconciliation[key][2][1]]
			parent1 = parents[reconciliation[key][1][1]]
			parent2 = parents[reconciliation[key][2][1]]
			reconGraph[parent1] = reconGraph[parent1] + [key[0]]
			reconGraph[parent2] = reconGraph[parent2] + [key[0]]
			transferEdge = reconciliation[key][1][1]
			if transferEdge == key[1]:
				transferEdge = reconciliation[key][2][1]
				transferList.append([key[0], parent2, transferEdge])
			else:
				transferList.append([key[0], parent1, transferEdge])

		elif reconciliation[key][0] == 'S':
			parent = parents[key[0]]
			if parent != 'Top':
				reconGraph[parent] = reconGraph[parent] + [key[1]]
			reconGraph[key[1]] = reconGraph[key[1]] + reconGraph[key[0]]

		elif reconciliation[key][0] == 'D':
			parent = parents[key[1]]
			if parent != 'Top':
				reconGraph[parent] = reconGraph[parent] + [key[0]]
			reconGraph[key[0]] = reconGraph[key[0]] + [key[1]]

		elif reconciliation[key][0] == 'C':
			reconGraph[key[1]] = [None]
			reconGraph[key[0]] = [None]

	for key in reconGraph:
		reconGraph[key] = uniquify(reconGraph[key])

	return reconGraph, transferList


def detectCycles(HostTree, ParasiteTree, reconciliation):
	"""This function takes as input the cycle checking graph, reconGraph, and returns a new reconGraph where the cycles
	are removed and also keeps track of where the transfers occurred in the reconciliation."""

	guiltyTransferList = []
	markingDict = {}
	reconGraph, transferList = buildReconciliation(H, P, R)
	Hroot = findRoot(H)
	markingDict[Hroot] = ['check']
	cycleNode = recurseChildren(reconGraph, markingDict, Hroot)
	newReconGraph, guiltyTransfer = deleteTransfer(reconGraph, markingDict, transferList, cycleNode)
	if guiltyTransfer != []:
		guiltyTransferList.append(guiltyTransfer)
	while cycleNode != None:
		cycleNode = None
		markingDict = {}
		cycleNode = recurseChildren(newReconGraph, {Hroot: ['check']}, Hroot)
		newReconGraph, guiltyTransfer = deleteTransfer(newReconGraph, markingDict, transferList, cycleNode)
		if guiltyTransfer != []:
			guiltyTransferList.append(guiltyTransfer)

	return newReconGraph, guiltyTransferList

def checked(markingDict, node):
	return node in markingDict

def ticked(markingDict, node):
	return node in markingDict and len(markingDict[node]) == 2

def tick(markingDict, node):
	markingDict[node] = markingDict[node] + ['tick']

def untick(markingDict, node):
	markingDict[node] = markingDict[node][:1]

def check(markingDict, node):
	markingDict[node] = ['check']

def recurseChildren(reconGraph, markingDict, node):
	"""This function takes as input reconGraph, the cycle checking graph, markingDict, a dictionary that keeps track
	of all the childNodes that are marked, node, the node that we will recurse on, and cycleList, 
	which keeps track of cycles that it finds. It returns an updated markingDict and cycleList"""

	tick(markingDict, node)
	for child in reconGraph[node]:
		if not checked(markingDict, child) and child != None:
			check(markingDict, child)
			cycleNode = recurseChildren(reconGraph, markingDict, child)

			if cycleNode != None:
				return cycleNode

		elif child != None:
			if ticked(markingDict, child):
				return child

	untick(markingDict, node)

	return None


def deleteTransfer(reconGraph, markingDict, transferList, cycleNode):
	"""This function takes as input the cycle checking graph, markingDict, transferList, and cycleNode, and 
	returns the updated cycle checking graph with the guilty transfers removed."""
	newReconGraph = copy.deepcopy(reconGraph)
	guiltyTransfer = []
	if cycleNode == None:
		return newReconGraph, guiltyTransfer
	for transfer in transferList:
		if cycleNode in transfer:
			guiltyTransfer = transfer
			childList = newReconGraph[transfer[1]]
			childList.remove(transfer[0])
			newReconGraph[transfer[1]] = childList
			childList = newReconGraph[transfer[0]]
			childList.remove(transfer[2])
			newReconGraph[transfer[0]] = childList
			break
	return newReconGraph, guiltyTransfer


def updateReconciliation(guiltyTransferList, HostTree, ParasiteTree, reconciliation):
	""" """

	parents = parentsDict(HostTree, ParasiteTree)
	newReconciliation = copy.deepcopy(reconciliation)
	for transfer in guiltyTransferList:
		for key in newReconciliation:
			if transfer[0] == key[0] and transfer[1] == parents[key[1]]:
				newValue = ['GT'] + newReconciliation[key][1:]
				newReconciliation[key] = newValue
	return newReconciliation


def detectCyclesWrapper(H, P, R):
	""" """

	markingDict = {}
	newReconGraph, guiltyTransferList = detectCycles(H, P, R)
	newReconciliation = updateReconciliation(guiltyTransferList, H, P, R)
	return newReconciliation





	

#H = {('m62', 'm66'): ('m62', 'm66', None, None), ('m101', 'm102'): ('m101', 'm102', ('m102', 'm103'), ('m102', 'm104')), ('m2', 'm3'): ('m2', 'm3', ('m3', 'm4'), ('m3', 'm5')), ('m94', 'm112'): ('m94', 'm112', ('m112', 'm113'), ('m112', 'm122')), ('m96', 'm98'): ('m96', 'm98', None, None), ('m86', 'm87'): ('m86', 'm87', ('m87', 'm88'), ('m87', 'm93')), ('m185', 'm187'): ('m185', 'm187', None, None), ('m51', 'm57'): ('m51', 'm57', ('m57', 'm58'), ('m57', 'm67')), ('m99', 'm101'): ('m99', 'm101', ('m101', 'm102'), ('m101', 'm105')), ('m109', 'm111'): ('m109', 'm111', None, None), ('m96', 'm97'): ('m96', 'm97', None, None), ('m75', 'm76'): ('m75', 'm76', ('m76', 'm77'), ('m76', 'm86')), ('m63', 'm65'): ('m63', 'm65', None, None), ('m140', 'm142'): ('m140', 'm142', ('m142', 'm143'), ('m142', 'm144')), ('m6', 'm7'): ('m6', 'm7', None, None), ('m184', 'm188'): ('m184', 'm188', None, None), ('m122', 'm123'): ('m122', 'm123', None, None), ('m116', 'm118'): ('m116', 'm118', None, None), ('m139', 'm145'): ('m139', 'm145', None, None), ('m138', 'm146'): ('m138', 'm146', ('m146', 'm147'), ('m146', 'm148')), ('m151', 'm152'): ('m151', 'm152', None, None), ('m182', 'm190'): ('m182', 'm190', ('m190', 'm191'), ('m190', 'm194')), ('m3', 'm5'): ('m3', 'm5', ('m5', 'm6'), ('m5', 'm11')), ('m182', 'm183'): ('m182', 'm183', ('m183', 'm184'), ('m183', 'm189')), ('m11', 'm17'): ('m11', 'm17', None, None), ('m165', 'm167'): ('m165', 'm167', None, None), 'hTop': ('Top', 'm0', ('m0', 'm1'), ('m0', 'm46')), ('m37', 'm39'): ('m37', 'm39', ('m39', 'm40'), ('m39', 'm41')), ('m128', 'm129'): ('m128', 'm129', None, None), ('m46', 'm74'): ('m46', 'm74', ('m74', 'm75'), ('m74', 'm172')), ('m74', 'm172'): ('m74', 'm172', ('m172', 'm173'), ('m172', 'm182')), ('m102', 'm103'): ('m102', 'm103', None, None), ('m51', 'm52'): ('m51', 'm52', ('m52', 'm53'), ('m52', 'm54')), ('m172', 'm182'): ('m172', 'm182', ('m182', 'm183'), ('m182', 'm190')), ('m39', 'm41'): ('m39', 'm41', ('m41', 'm42'), ('m41', 'm45')), ('m174', 'm178'): ('m174', 'm178', None, None), ('m122', 'm124'): ('m122', 'm124', ('m124', 'm125'), ('m124', 'm128')), ('m31', 'm32'): ('m31', 'm32', None, None), ('m149', 'm150'): ('m149', 'm150', ('m150', 'm151'), ('m150', 'm154')), ('m155', 'm161'): ('m155', 'm161', ('m161', 'm162'), ('m161', 'm163')), ('m11', 'm12'): ('m11', 'm12', ('m12', 'm13'), ('m12', 'm14')), ('m87', 'm88'): ('m87', 'm88', ('m88', 'm89'), ('m88', 'm90')), ('m124', 'm125'): ('m124', 'm125', ('m125', 'm126'), ('m125', 'm127')), ('m87', 'm93'): ('m87', 'm93', None, None), ('m112', 'm113'): ('m112', 'm113', ('m113', 'm114'), ('m113', 'm115')), ('m28', 'm30'): ('m28', 'm30', None, None), ('m164', 'm168'): ('m164', 'm168', None, None), ('m75', 'm149'): ('m75', 'm149', ('m149', 'm150'), ('m149', 'm155')), ('m195', 'm197'): ('m195', 'm197', None, None), ('m80', 'm82'): ('m80', 'm82', None, None), ('m173', 'm174'): ('m173', 'm174', ('m174', 'm175'), ('m174', 'm178')), ('m149', 'm155'): ('m149', 'm155', ('m155', 'm156'), ('m155', 'm161')), ('m62', 'm63'): ('m62', 'm63', ('m63', 'm64'), ('m63', 'm65')), ('m94', 'm95'): ('m94', 'm95', ('m95', 'm96'), ('m95', 'm99')), ('m151', 'm153'): ('m151', 'm153', None, None), ('m20', 'm24'): ('m20', 'm24', None, None), ('m76', 'm77'): ('m76', 'm77', ('m77', 'm78'), ('m77', 'm83')), ('m183', 'm189'): ('m183', 'm189', None, None), ('m150', 'm151'): ('m150', 'm151', ('m151', 'm152'), ('m151', 'm153')), ('m146', 'm148'): ('m146', 'm148', None, None), ('m105', 'm109'): ('m105', 'm109', ('m109', 'm110'), ('m109', 'm111')), ('m48', 'm50'): ('m48', 'm50', None, None), ('m77', 'm78'): ('m77', 'm78', ('m78', 'm79'), ('m78', 'm80')), ('m35', 'm37'): ('m35', 'm37', ('m37', 'm38'), ('m37', 'm39')), ('m0', 'm1'): ('m0', 'm1', ('m1', 'm2'), ('m1', 'm25')), ('m102', 'm104'): ('m102', 'm104', None, None), ('m20', 'm21'): ('m20', 'm21', ('m21', 'm22'), ('m21', 'm23')), ('m18', 'm20'): ('m18', 'm20', ('m20', 'm21'), ('m20', 'm24')), ('m71', 'm73'): ('m71', 'm73', None, None), ('m25', 'm27'): ('m25', 'm27', ('m27', 'm28'), ('m27', 'm31')), ('m88', 'm90'): ('m88', 'm90', ('m90', 'm91'), ('m90', 'm92')), ('m161', 'm163'): ('m161', 'm163', ('m163', 'm164'), ('m163', 'm169')), ('m63', 'm64'): ('m63', 'm64', None, None), ('m58', 'm60'): ('m58', 'm60', ('m60', 'm61'), ('m60', 'm62')), ('m83', 'm85'): ('m83', 'm85', None, None), ('m3', 'm4'): ('m3', 'm4', None, None), ('m21', 'm23'): ('m21', 'm23', None, None), ('m78', 'm79'): ('m78', 'm79', None, None), ('m174', 'm175'): ('m174', 'm175', ('m175', 'm176'), ('m175', 'm177')), ('m191', 'm192'): ('m191', 'm192', None, None), ('m37', 'm38'): ('m37', 'm38', None, None), ('m133', 'm135'): ('m133', 'm135', None, None), ('m175', 'm177'): ('m175', 'm177', None, None), ('m52', 'm53'): ('m52', 'm53', None, None), ('m99', 'm100'): ('m99', 'm100', None, None), ('m1', 'm25'): ('m1', 'm25', ('m25', 'm26'), ('m25', 'm27')), ('m78', 'm80'): ('m78', 'm80', ('m80', 'm81'), ('m80', 'm82')), ('m41', 'm45'): ('m41', 'm45', None, None), ('m113', 'm115'): ('m113', 'm115', ('m115', 'm116'), ('m115', 'm119')), ('m115', 'm119'): ('m115', 'm119', ('m119', 'm120'), ('m119', 'm121')), ('m125', 'm127'): ('m125', 'm127', None, None), ('m27', 'm31'): ('m27', 'm31', ('m31', 'm32'), ('m31', 'm33')), ('m116', 'm117'): ('m116', 'm117', None, None), ('m28', 'm29'): ('m28', 'm29', None, None), ('m90', 'm91'): ('m90', 'm91', None, None), ('m69', 'm70'): ('m69', 'm70', None, None), ('m175', 'm176'): ('m175', 'm176', None, None), ('m77', 'm83'): ('m77', 'm83', ('m83', 'm84'), ('m83', 'm85')), ('m48', 'm49'): ('m48', 'm49', None, None), ('m101', 'm105'): ('m101', 'm105', ('m105', 'm106'), ('m105', 'm109')), ('m5', 'm6'): ('m5', 'm6', ('m6', 'm7'), ('m6', 'm8')), ('m67', 'm69'): ('m67', 'm69', ('m69', 'm70'), ('m69', 'm71')), ('m60', 'm61'): ('m60', 'm61', None, None), ('m14', 'm15'): ('m14', 'm15', None, None), ('m150', 'm154'): ('m150', 'm154', None, None), ('m130', 'm131'): ('m130', 'm131', None, None), ('m156', 'm160'): ('m156', 'm160', None, None), ('m112', 'm122'): ('m112', 'm122', ('m122', 'm123'), ('m122', 'm124')), ('m90', 'm92'): ('m90', 'm92', None, None), ('m194', 'm198'): ('m194', 'm198', None, None), ('m33', 'm35'): ('m33', 'm35', ('m35', 'm36'), ('m35', 'm37')), ('m164', 'm165'): ('m164', 'm165', ('m165', 'm166'), ('m165', 'm167')), ('m35', 'm36'): ('m35', 'm36', None, None), ('m12', 'm14'): ('m12', 'm14', ('m14', 'm15'), ('m14', 'm16')), ('m106', 'm108'): ('m106', 'm108', None, None), ('m156', 'm157'): ('m156', 'm157', ('m157', 'm158'), ('m157', 'm159')), ('m27', 'm28'): ('m27', 'm28', ('m28', 'm29'), ('m28', 'm30')), ('m157', 'm159'): ('m157', 'm159', None, None), ('m106', 'm107'): ('m106', 'm107', None, None), ('m115', 'm116'): ('m115', 'm116', ('m116', 'm117'), ('m116', 'm118')), ('m14', 'm16'): ('m14', 'm16', None, None), ('m157', 'm158'): ('m157', 'm158', None, None), ('m71', 'm72'): ('m71', 'm72', None, None), ('m124', 'm128'): ('m124', 'm128', ('m128', 'm129'), ('m128', 'm130')), ('m25', 'm26'): ('m25', 'm26', None, None), ('m130', 'm132'): ('m130', 'm132', ('m132', 'm133'), ('m132', 'm136')), ('m184', 'm185'): ('m184', 'm185', ('m185', 'm186'), ('m185', 'm187')), ('m190', 'm194'): ('m190', 'm194', ('m194', 'm195'), ('m194', 'm198')), ('m138', 'm139'): ('m138', 'm139', ('m139', 'm140'), ('m139', 'm145')), ('m169', 'm170'): ('m169', 'm170', None, None), ('m83', 'm84'): ('m83', 'm84', None, None), ('m2', 'm18'): ('m2', 'm18', ('m18', 'm19'), ('m18', 'm20')), ('m57', 'm67'): ('m57', 'm67', ('m67', 'm68'), ('m67', 'm69')), ('m8', 'm10'): ('m8', 'm10', None, None), ('m1', 'm2'): ('m1', 'm2', ('m2', 'm3'), ('m2', 'm18')), ('m183', 'm184'): ('m183', 'm184', ('m184', 'm185'), ('m184', 'm188')), ('m95', 'm99'): ('m95', 'm99', ('m99', 'm100'), ('m99', 'm101')), ('m21', 'm22'): ('m21', 'm22', None, None), ('m18', 'm19'): ('m18', 'm19', None, None), ('m119', 'm120'): ('m119', 'm120', None, None), ('m165', 'm166'): ('m165', 'm166', None, None), ('m133', 'm134'): ('m133', 'm134', None, None), ('m172', 'm173'): ('m172', 'm173', ('m173', 'm174'), ('m173', 'm179')), ('m74', 'm75'): ('m74', 'm75', ('m75', 'm76'), ('m75', 'm149')), ('m76', 'm86'): ('m76', 'm86', ('m86', 'm87'), ('m86', 'm94')), ('m109', 'm110'): ('m109', 'm110', None, None), ('m190', 'm191'): ('m190', 'm191', ('m191', 'm192'), ('m191', 'm193')), ('m140', 'm141'): ('m140', 'm141', None, None), ('m52', 'm54'): ('m52', 'm54', ('m54', 'm55'), ('m54', 'm56')), ('m128', 'm130'): ('m128', 'm130', ('m130', 'm131'), ('m130', 'm132')), ('m8', 'm9'): ('m8', 'm9', None, None), ('m136', 'm138'): ('m136', 'm138', ('m138', 'm139'), ('m138', 'm146')), ('m42', 'm43'): ('m42', 'm43', None, None), ('m132', 'm136'): ('m132', 'm136', ('m136', 'm137'), ('m136', 'm138')), ('m86', 'm94'): ('m86', 'm94', ('m94', 'm95'), ('m94', 'm112')), ('m54', 'm55'): ('m54', 'm55', None, None), ('m179', 'm181'): ('m179', 'm181', None, None), ('m113', 'm114'): ('m113', 'm114', None, None), ('m125', 'm126'): ('m125', 'm126', None, None), ('m5', 'm11'): ('m5', 'm11', ('m11', 'm12'), ('m11', 'm17')), ('m88', 'm89'): ('m88', 'm89', None, None), ('m191', 'm193'): ('m191', 'm193', None, None), ('m6', 'm8'): ('m6', 'm8', ('m8', 'm9'), ('m8', 'm10')), ('m69', 'm71'): ('m69', 'm71', ('m71', 'm72'), ('m71', 'm73')), ('m146', 'm147'): ('m146', 'm147', None, None), ('m39', 'm40'): ('m39', 'm40', None, None), ('m119', 'm121'): ('m119', 'm121', None, None), ('m31', 'm33'): ('m31', 'm33', ('m33', 'm34'), ('m33', 'm35')), ('m163', 'm169'): ('m163', 'm169', ('m169', 'm170'), ('m169', 'm171')), ('m142', 'm144'): ('m142', 'm144', None, None), ('m67', 'm68'): ('m67', 'm68', None, None), ('m60', 'm62'): ('m60', 'm62', ('m62', 'm63'), ('m62', 'm66')), ('m142', 'm143'): ('m142', 'm143', None, None), ('m185', 'm186'): ('m185', 'm186', None, None), ('m132', 'm133'): ('m132', 'm133', ('m133', 'm134'), ('m133', 'm135')), ('m54', 'm56'): ('m54', 'm56', None, None), ('m47', 'm48'): ('m47', 'm48', ('m48', 'm49'), ('m48', 'm50')), ('m173', 'm179'): ('m173', 'm179', ('m179', 'm180'), ('m179', 'm181')), ('m42', 'm44'): ('m42', 'm44', None, None), ('m47', 'm51'): ('m47', 'm51', ('m51', 'm52'), ('m51', 'm57')), ('m12', 'm13'): ('m12', 'm13', None, None), ('m161', 'm162'): ('m161', 'm162', None, None), ('m80', 'm81'): ('m80', 'm81', None, None), ('m33', 'm34'): ('m33', 'm34', None, None), ('m136', 'm137'): ('m136', 'm137', None, None), ('m163', 'm164'): ('m163', 'm164', ('m164', 'm165'), ('m164', 'm168')), ('m194', 'm195'): ('m194', 'm195', ('m195', 'm196'), ('m195', 'm197')), ('m95', 'm96'): ('m95', 'm96', ('m96', 'm97'), ('m96', 'm98')), ('m41', 'm42'): ('m41', 'm42', ('m42', 'm43'), ('m42', 'm44')), ('m195', 'm196'): ('m195', 'm196', None, None), ('m105', 'm106'): ('m105', 'm106', ('m106', 'm107'), ('m106', 'm108')), ('m46', 'm47'): ('m46', 'm47', ('m47', 'm48'), ('m47', 'm51')), ('m57', 'm58'): ('m57', 'm58', ('m58', 'm59'), ('m58', 'm60')), ('m58', 'm59'): ('m58', 'm59', None, None), ('m169', 'm171'): ('m169', 'm171', None, None), ('m0', 'm46'): ('m0', 'm46', ('m46', 'm47'), ('m46', 'm74')), ('m179', 'm180'): ('m179', 'm180', None, None), ('m155', 'm156'): ('m155', 'm156', ('m156', 'm157'), ('m156', 'm160')), ('m139', 'm140'): ('m139', 'm140', ('m140', 'm141'), ('m140', 'm142'))}

#P = {('n142', 'n146'): ('n142', 'n146', None, None), ('n90', 'n91'): ('n90', 'n91', ('n91', 'n92'), ('n91', 'n95')), ('n117', 'n131'): ('n117', 'n131', ('n131', 'n132'), ('n131', 'n141')), ('n155', 'n159'): ('n155', 'n159', None, None), ('n11', 'n12'): ('n11', 'n12', ('n12', 'n13'), ('n12', 'n18')), ('n67', 'n69'): ('n67', 'n69', None, None), ('n120', 'n121'): ('n120', 'n121', ('n121', 'n122'), ('n121', 'n127')), ('n80', 'n81'): ('n80', 'n81', ('n81', 'n82'), ('n81', 'n85')), ('n92', 'n93'): ('n92', 'n93', None, None), ('n88', 'n106'): ('n88', 'n106', ('n106', 'n107'), ('n106', 'n116')), ('n24', 'n44'): ('n24', 'n44', ('n44', 'n45'), ('n44', 'n52')), ('n13', 'n14'): ('n13', 'n14', ('n14', 'n15'), ('n14', 'n16')), ('n156', 'n158'): ('n156', 'n158', None, None), ('n119', 'n129'): ('n119', 'n129', None, None), ('n123', 'n124'): ('n123', 'n124', None, None), ('n161', 'n162'): ('n161', 'n162', None, None), ('n21', 'n22'): ('n21', 'n22', ('n22', 'n23'), ('n22', 'n54')), ('n166', 'n168'): ('n166', 'n168', None, None), ('n54', 'n56'): ('n54', 'n56', None, None), ('n44', 'n45'): ('n44', 'n45', ('n45', 'n46'), ('n45', 'n51')), ('n14', 'n15'): ('n14', 'n15', None, None), ('n122', 'n126'): ('n122', 'n126', None, None), ('n110', 'n111'): ('n110', 'n111', None, None), ('n60', 'n61'): ('n60', 'n61', ('n61', 'n62'), ('n61', 'n67')), ('n20', 'n78'): ('n20', 'n78', ('n78', 'n79'), ('n78', 'n88')), ('n90', 'n96'): ('n90', 'n96', None, None), ('n0', 'n1'): ('n0', 'n1', None, None), ('n78', 'n88'): ('n78', 'n88', ('n88', 'n89'), ('n88', 'n106')), ('n35', 'n39'): ('n35', 'n39', None, None), ('n117', 'n118'): ('n117', 'n118', ('n118', 'n119'), ('n118', 'n130')), ('n35', 'n36'): ('n35', 'n36', ('n36', 'n37'), ('n36', 'n38')), ('n106', 'n116'): ('n106', 'n116', ('n116', 'n117'), ('n116', 'n148')), ('n45', 'n46'): ('n45', 'n46', ('n46', 'n47'), ('n46', 'n50')), ('n36', 'n38'): ('n36', 'n38', None, None), ('n103', 'n104'): ('n103', 'n104', None, None), ('n121', 'n127'): ('n121', 'n127', None, None), ('n106', 'n107'): ('n106', 'n107', ('n107', 'n108'), ('n107', 'n115')), ('n8', 'n9'): ('n8', 'n9', None, None), ('n149', 'n151'): ('n149', 'n151', None, None), ('n82', 'n83'): ('n82', 'n83', None, None), ('n108', 'n114'): ('n108', 'n114', None, None), ('n132', 'n140'): ('n132', 'n140', None, None), ('n98', 'n99'): ('n98', 'n99', ('n99', 'n100'), ('n99', 'n101')), ('n166', 'n167'): ('n166', 'n167', None, None), ('n134', 'n135'): ('n134', 'n135', None, None), ('n47', 'n49'): ('n47', 'n49', None, None), ('n121', 'n122'): ('n121', 'n122', ('n122', 'n123'), ('n122', 'n126')), ('n118', 'n119'): ('n118', 'n119', ('n119', 'n120'), ('n119', 'n129')), ('n133', 'n137'): ('n133', 'n137', ('n137', 'n138'), ('n137', 'n139')), ('n29', 'n30'): ('n29', 'n30', ('n30', 'n31'), ('n30', 'n32')), ('n88', 'n89'): ('n88', 'n89', ('n89', 'n90'), ('n89', 'n97')), ('n154', 'n160'): ('n154', 'n160', ('n160', 'n161'), ('n160', 'n164')), ('n3', 'n7'): ('n3', 'n7', None, None), ('n160', 'n161'): ('n160', 'n161', ('n161', 'n162'), ('n161', 'n163')), ('n23', 'n24'): ('n23', 'n24', ('n24', 'n25'), ('n24', 'n44')), ('n22', 'n54'): ('n22', 'n54', ('n54', 'n55'), ('n54', 'n56')), ('n134', 'n136'): ('n134', 'n136', None, None), ('n28', 'n29'): ('n28', 'n29', ('n29', 'n30'), ('n29', 'n33')), ('n67', 'n68'): ('n67', 'n68', None, None), ('n78', 'n79'): ('n78', 'n79', ('n79', 'n80'), ('n79', 'n87')), ('n41', 'n43'): ('n41', 'n43', None, None), ('n13', 'n17'): ('n13', 'n17', None, None), ('n149', 'n150'): ('n149', 'n150', None, None), ('n161', 'n163'): ('n161', 'n163', None, None), ('n14', 'n16'): ('n14', 'n16', None, None), ('n137', 'n138'): ('n137', 'n138', None, None), ('n110', 'n112'): ('n110', 'n112', None, None), ('n99', 'n100'): ('n99', 'n100', None, None), ('n59', 'n60'): ('n59', 'n60', ('n60', 'n61'), ('n60', 'n70')), ('n0', 'n2'): ('n0', 'n2', ('n2', 'n3'), ('n2', 'n8')), ('n23', 'n53'): ('n23', 'n53', None, None), ('n63', 'n65'): ('n63', 'n65', None, None), ('n108', 'n109'): ('n108', 'n109', ('n109', 'n110'), ('n109', 'n113')), ('n44', 'n52'): ('n44', 'n52', None, None), ('n4', 'n6'): ('n4', 'n6', None, None), ('n91', 'n92'): ('n91', 'n92', ('n92', 'n93'), ('n92', 'n94')), ('n22', 'n23'): ('n22', 'n23', ('n23', 'n24'), ('n23', 'n53')), ('n137', 'n139'): ('n137', 'n139', None, None), ('n8', 'n10'): ('n8', 'n10', ('n10', 'n11'), ('n10', 'n20')), ('n58', 'n59'): ('n58', 'n59', ('n59', 'n60'), ('n59', 'n73')), ('n30', 'n31'): ('n30', 'n31', None, None), ('n160', 'n164'): ('n160', 'n164', ('n164', 'n165'), ('n164', 'n166')), ('n156', 'n157'): ('n156', 'n157', None, None), ('n97', 'n103'): ('n97', 'n103', ('n103', 'n104'), ('n103', 'n105')), ('n142', 'n143'): ('n142', 'n143', ('n143', 'n144'), ('n143', 'n145')), ('n26', 'n27'): ('n26', 'n27', ('n27', 'n28'), ('n27', 'n35')), ('n75', 'n77'): ('n75', 'n77', None, None), ('n57', 'n75'): ('n57', 'n75', ('n75', 'n76'), ('n75', 'n77')), ('n82', 'n84'): ('n82', 'n84', None, None), ('n70', 'n71'): ('n70', 'n71', None, None), ('n152', 'n154'): ('n152', 'n154', ('n154', 'n155'), ('n154', 'n160')), ('n59', 'n73'): ('n59', 'n73', None, None), ('n36', 'n37'): ('n36', 'n37', None, None), ('n12', 'n18'): ('n12', 'n18', None, None), ('n54', 'n55'): ('n54', 'n55', None, None), ('n46', 'n50'): ('n46', 'n50', None, None), ('n122', 'n123'): ('n122', 'n123', ('n123', 'n124'), ('n123', 'n125')), ('n107', 'n115'): ('n107', 'n115', None, None), ('n92', 'n94'): ('n92', 'n94', None, None), ('n148', 'n149'): ('n148', 'n149', ('n149', 'n150'), ('n149', 'n151')), ('n107', 'n108'): ('n107', 'n108', ('n108', 'n109'), ('n108', 'n114')), ('n79', 'n87'): ('n79', 'n87', None, None), ('n30', 'n32'): ('n30', 'n32', None, None), ('n123', 'n125'): ('n123', 'n125', None, None), ('n164', 'n166'): ('n164', 'n166', ('n166', 'n167'), ('n166', 'n168')), ('n109', 'n113'): ('n109', 'n113', None, None), ('n143', 'n144'): ('n143', 'n144', None, None), ('n26', 'n40'): ('n26', 'n40', None, None), ('n141', 'n147'): ('n141', 'n147', None, None), ('n143', 'n145'): ('n143', 'n145', None, None), ('n81', 'n82'): ('n81', 'n82', ('n82', 'n83'), ('n82', 'n84')), ('n41', 'n42'): ('n41', 'n42', None, None), ('n79', 'n80'): ('n79', 'n80', ('n80', 'n81'), ('n80', 'n86')), ('n25', 'n26'): ('n25', 'n26', ('n26', 'n27'), ('n26', 'n40')), ('n25', 'n41'): ('n25', 'n41', ('n41', 'n42'), ('n41', 'n43')), ('n10', 'n11'): ('n10', 'n11', ('n11', 'n12'), ('n11', 'n19')), ('n46', 'n47'): ('n46', 'n47', ('n47', 'n48'), ('n47', 'n49')), ('n164', 'n165'): ('n164', 'n165', None, None), ('n57', 'n58'): ('n57', 'n58', ('n58', 'n59'), ('n58', 'n74')), ('n141', 'n142'): ('n141', 'n142', ('n142', 'n143'), ('n142', 'n146')), ('n70', 'n72'): ('n70', 'n72', None, None), ('n12', 'n13'): ('n12', 'n13', ('n13', 'n14'), ('n13', 'n17')), ('n61', 'n67'): ('n61', 'n67', ('n67', 'n68'), ('n67', 'n69')), ('n119', 'n120'): ('n119', 'n120', ('n120', 'n121'), ('n120', 'n128')), ('n99', 'n101'): ('n99', 'n101', None, None), ('n89', 'n97'): ('n89', 'n97', ('n97', 'n98'), ('n97', 'n103')), ('n63', 'n64'): ('n63', 'n64', None, None), ('n116', 'n148'): ('n116', 'n148', ('n148', 'n149'), ('n148', 'n152')), ('n98', 'n102'): ('n98', 'n102', None, None), ('n20', 'n21'): ('n20', 'n21', ('n21', 'n22'), ('n21', 'n57')), ('n28', 'n34'): ('n28', 'n34', None, None), ('n118', 'n130'): ('n118', 'n130', None, None), ('n11', 'n19'): ('n11', 'n19', None, None), ('n21', 'n57'): ('n21', 'n57', ('n57', 'n58'), ('n57', 'n75')), ('n133', 'n134'): ('n133', 'n134', ('n134', 'n135'), ('n134', 'n136')), ('n62', 'n66'): ('n62', 'n66', None, None), ('n24', 'n25'): ('n24', 'n25', ('n25', 'n26'), ('n25', 'n41')), 'pTop': ('Top', 'n0', ('n0', 'n1'), ('n0', 'n2')), ('n27', 'n28'): ('n27', 'n28', ('n28', 'n29'), ('n28', 'n34')), ('n80', 'n86'): ('n80', 'n86', None, None), ('n75', 'n76'): ('n75', 'n76', None, None), ('n45', 'n51'): ('n45', 'n51', None, None), ('n152', 'n153'): ('n152', 'n153', None, None), ('n60', 'n70'): ('n60', 'n70', ('n70', 'n71'), ('n70', 'n72')), ('n4', 'n5'): ('n4', 'n5', None, None), ('n47', 'n48'): ('n47', 'n48', None, None), ('n103', 'n105'): ('n103', 'n105', None, None), ('n148', 'n152'): ('n148', 'n152', ('n152', 'n153'), ('n152', 'n154')), ('n62', 'n63'): ('n62', 'n63', ('n63', 'n64'), ('n63', 'n65')), ('n97', 'n98'): ('n97', 'n98', ('n98', 'n99'), ('n98', 'n102')), ('n27', 'n35'): ('n27', 'n35', ('n35', 'n36'), ('n35', 'n39')), ('n109', 'n110'): ('n109', 'n110', ('n110', 'n111'), ('n110', 'n112')), ('n131', 'n141'): ('n131', 'n141', ('n141', 'n142'), ('n141', 'n147')), ('n58', 'n74'): ('n58', 'n74', None, None), ('n2', 'n3'): ('n2', 'n3', ('n3', 'n4'), ('n3', 'n7')), ('n116', 'n117'): ('n116', 'n117', ('n117', 'n118'), ('n117', 'n131')), ('n91', 'n95'): ('n91', 'n95', None, None), ('n120', 'n128'): ('n120', 'n128', None, None), ('n2', 'n8'): ('n2', 'n8', ('n8', 'n9'), ('n8', 'n10')), ('n131', 'n132'): ('n131', 'n132', ('n132', 'n133'), ('n132', 'n140')), ('n61', 'n62'): ('n61', 'n62', ('n62', 'n63'), ('n62', 'n66')), ('n81', 'n85'): ('n81', 'n85', None, None), ('n132', 'n133'): ('n132', 'n133', ('n133', 'n134'), ('n133', 'n137')), ('n154', 'n155'): ('n154', 'n155', ('n155', 'n156'), ('n155', 'n159')), ('n155', 'n156'): ('n155', 'n156', ('n156', 'n157'), ('n156', 'n158')), ('n10', 'n20'): ('n10', 'n20', ('n20', 'n21'), ('n20', 'n78')), ('n29', 'n33'): ('n29', 'n33', None, None), ('n89', 'n90'): ('n89', 'n90', ('n90', 'n91'), ('n90', 'n96')), ('n3', 'n4'): ('n3', 'n4', ('n4', 'n5'), ('n4', 'n6'))}

# phi = {'n74': 'm189', 'n76': 'm85', 'n77': 'm84', 'n16': 'm91', 'n17': 'm89', 'n72': 'm32', 'n15': 'm92', 'n56': 'm82', 'n18': 'm93', 'n19': 'm50', 'n52': 'm114', 'n53': 'm123', 'n50': 'm117', 'n51': 'm118', 'n38': 'm134', 'n39': 'm131', 'n64': 'm168', 'n31': 'm144', 'n32': 'm143', 'n33': 'm141', 'n34': 'm145', 'n37': 'm135', 'n158': 'm118', 'n71': 'm32', 'n167': 'm198', 'n159': 'm103', 'n93': 'm198', 'n73': 'm162', 'n96': 'm193', 'n94': 'm197', 'n95': 'm196', 'n114': 'm66', 'n115': 'm59', 'n130': 'm22', 'n146': 'm24', 'n136': 'm13', 'n111': 'm65', 'n112': 'm61', 'n113': 'm64', 'n150': 'm111', 'n151': 'm110', 'n138': 'm10', 'n139': 'm7', 'n128': 'm129', 'n49': 'm120', 'n48': 'm121', 'n65': 'm167', 'n55': 'm178', 'n40': 'm129', 'n43': 'm126', 'n42': 'm127', 'n163': 'm108', 'n69': 'm170', 'n68': 'm171', 'n145': 'm22', 'n162': 'm104', 'n124': 'm100', 'n157': 'm111', 'n85': 'm154', 'n84': 'm81', 'n87': 'm79', 'n86': 'm147', 'n165': 'm167', 'n153': 'm9', 'n83': 'm188', 'n135': 'm16', 'n168': 'm111', 'n140': 'm4', 'n66': 'm166', 'n144': 'm23', 'n9': 'm61', 'n105': 'm158', 'n104': 'm159', 'n129': 'm85', 'n102': 'm153', 'n101': 'm180', 'n100': 'm181', 'n125': 'm107', 'n1': 'm59', 'n127': 'm120', 'n126': 'm129', 'n147': 'm15', 'n5': 'm65', 'n6': 'm64', 'n7': 'm66'}

#R = {('n50', 'm117'): ['C', (None, None), (None, None)], ('n122', 'm100'): ['T', ('n123', 'm100'), ('n126', 'm129')], ('n2', 'm60'): ['S', ('n8', 'm61'), ('n3', 'm62')], ('n6', 'm64'): ['C', (None, None), (None, None)], ('n135', 'm16'): ['C', (None, None), (None, None)], ('n55', 'm178'): ['C', (None, None), (None, None)], ('n80', 'm80'): ['T', ('n81', 'm80'), ('n86', 'm147')], ('n121', 'm100'): ['T', ('n122', 'm100'), ('n127', 'm120')], ('n45', 'm116'): ['S', ('n46', 'm117'), ('n51', 'm118')], ('n154', 'm102'): ['S', ('n155', 'm103'), ('n160', 'm104')], ('n12', 'm86'): ['L', ('n12', 'm87'), (None, None)], ('n21', 'm83'): ['T', ('n57', 'm83'), ('n22', 'm122')], ('n168', 'm111'): ['C', (None, None), (None, None)], ('n67', 'm169'): ['S', ('n69', 'm170'), ('n68', 'm171')], ('n63', 'm167'): ['T', ('n65', 'm167'), ('n64', 'm168')], ('n84', 'm81'): ['C', (None, None), (None, None)], ('n134', 'm12'): ['S', ('n136', 'm13'), ('n135', 'm14')], ('n164', 'm167'): ['T', ('n165', 'm167'), ('n166', 'm198')], ('n108', 'm62'): ['S', ('n109', 'm63'), ('n114', 'm66')], ('n23', 'm122'): ['S', ('n53', 'm123'), ('n24', 'm124')], ('n137', 'm6'): ['S', ('n139', 'm7'), ('n138', 'm8')], ('n113', 'm64'): ['C', (None, None), (None, None)], ('n158', 'm118'): ['C', (None, None), (None, None)], ('n82', 'm81'): ['T', ('n84', 'm81'), ('n83', 'm188')], ('n33', 'm141'): ['C', (None, None), (None, None)], ('n46', 'm117'): ['T', ('n50', 'm117'), ('n47', 'm119')], ('n144', 'm23'): ['C', (None, None), (None, None)], ('n118', 'm100'): ['T', ('n119', 'm100'), ('n130', 'm22')], ('n4', 'm63'): ['S', ('n6', 'm64'), ('n5', 'm65')], ('n138', 'm10'): ['C', (None, None), (None, None)], ('n124', 'm100'): ['C', (None, None), (None, None)], ('n35', 'm133'): ['T', ('n36', 'm133'), ('n39', 'm131')], ('n59', 'm161'): ['S', ('n73', 'm162'), ('n60', 'm163')], ('n70', 'm32'): ['D', ('n71', 'm32'), ('n72', 'm32')], ('n90', 'm190'): ['S', ('n96', 'm191'), ('n91', 'm194')], ('n39', 'm131'): ['C', (None, None), (None, None)], ('n28', 'm138'): ['L', ('n28', 'm139'), (None, None)], ('n44', 'm113'): ['S', ('n52', 'm114'), ('n45', 'm115')], ('n115', 'm59'): ['C', (None, None), (None, None)], ('n111', 'm65'): ['C', (None, None), (None, None)], ('n78', 'm78'): ['T', ('n79', 'm78'), ('n88', 'm172')], ('n49', 'm120'): ['C', (None, None), (None, None)], ('n138', 'm8'): ['L', ('n138', 'm10'), (None, None)], ('n14', 'm90'): ['S', ('n16', 'm91'), ('n15', 'm92')], ('n103', 'm157'): ['S', ('n105', 'm158'), ('n104', 'm159')], ('n145', 'm22'): ['C', (None, None), (None, None)], ('n61', 'm163'): ['S', ('n62', 'm164'), ('n67', 'm169')], ('n90', 'm182'): ['L', ('n90', 'm190'), (None, None)], ('n148', 'm101'): ['S', ('n152', 'm102'), ('n149', 'm105')], ('n162', 'm104'): ['C', (None, None), (None, None)], ('n98', 'm179'): ['T', ('n99', 'm179'), ('n102', 'm153')], ('n94', 'm197'): ['C', (None, None), (None, None)], ('n27', 'm132'): ['S', ('n35', 'm133'), ('n28', 'm136')], ('n85', 'm154'): ['C', (None, None), (None, None)], ('n77', 'm84'): ['C', (None, None), (None, None)], ('n56', 'm82'): ['C', (None, None), (None, None)], ('n17', 'm89'): ['C', (None, None), (None, None)], ('n142', 'm18'): ['L', ('n142', 'm20'), (None, None)], ('n28', 'm139'): ['S', ('n29', 'm140'), ('n34', 'm145')], ('n163', 'm108'): ['C', (None, None), (None, None)], ('n91', 'm194'): ['L', ('n91', 'm195'), (None, None)], ('n120', 'm100'): ['T', ('n121', 'm100'), ('n128', 'm129')], ('n73', 'm162'): ['C', (None, None), (None, None)], ('n12', 'm87'): ['S', ('n13', 'm88'), ('n18', 'm93')], ('n112', 'm61'): ['C', (None, None), (None, None)], ('n37', 'm135'): ['C', (None, None), (None, None)], ('n5', 'm65'): ['C', (None, None), (None, None)], ('n167', 'm198'): ['C', (None, None), (None, None)], ('n40', 'm129'): ['C', (None, None), (None, None)], ('n64', 'm168'): ['C', (None, None), (None, None)], ('n165', 'm167'): ['C', (None, None), (None, None)], ('n123', 'm100'): ['T', ('n124', 'm100'), ('n125', 'm107')], ('n134', 'm11'): ['L', ('n134', 'm12'), (None, None)], ('n142', 'm20'): ['S', ('n143', 'm21'), ('n146', 'm24')], ('n62', 'm165'): ['S', ('n66', 'm166'), ('n63', 'm167')], ('n135', 'm14'): ['L', ('n135', 'm16'), (None, None)], ('n143', 'm21'): ['S', ('n145', 'm22'), ('n144', 'm23')], ('n60', 'm163'): ['T', ('n61', 'm163'), ('n70', 'm32')], ('n52', 'm114'): ['C', (None, None), (None, None)], ('n79', 'm78'): ['S', ('n87', 'm79'), ('n80', 'm80')], ('n69', 'm170'): ['C', (None, None), (None, None)], ('n82', 'm80'): ['L', ('n82', 'm81'), (None, None)], ('n28', 'm136'): ['L', ('n28', 'm138'), (None, None)], ('n146', 'm24'): ['C', (None, None), (None, None)], ('n31', 'm144'): ['C', (None, None), (None, None)], ('n98', 'm173'): ['L', ('n98', 'm179'), (None, None)], ('n66', 'm166'): ['C', (None, None), (None, None)], ('n81', 'm80'): ['T', ('n82', 'm80'), ('n85', 'm154')], ('n48', 'm121'): ['C', (None, None), (None, None)], ('n20', 'm77'): ['S', ('n78', 'm78'), ('n21', 'm83')], ('n131', 'm2'): ['S', ('n132', 'm3'), ('n141', 'm18')], ('n108', 'm60'): ['L', ('n108', 'm62'), (None, None)], ('n141', 'm18'): ['T', ('n142', 'm18'), ('n147', 'm15')], ('n58', 'm189'): ['T', ('n74', 'm189'), ('n59', 'm161')], ('n75', 'm83'): ['S', ('n77', 'm84'), ('n76', 'm85')], ('n74', 'm189'): ['C', (None, None), (None, None)], ('n150', 'm111'): ['C', (None, None), (None, None)], ('n129', 'm85'): ['C', (None, None), (None, None)], ('n42', 'm127'): ['C', (None, None), (None, None)], ('n157', 'm111'): ['C', (None, None), (None, None)], ('n0', 'm58'): ['S', ('n1', 'm59'), ('n2', 'm60')], ('n156', 'm118'): ['T', ('n158', 'm118'), ('n157', 'm111')], ('n106', 'm58'): ['T', ('n107', 'm58'), ('n116', 'm99')], ('n110', 'm65'): ['T', ('n111', 'm65'), ('n112', 'm61')], ('n88', 'm172'): ['T', ('n89', 'm172'), ('n106', 'm58')], ('n36', 'm133'): ['S', ('n38', 'm134'), ('n37', 'm135')], ('n126', 'm129'): ['C', (None, None), (None, None)], ('n3', 'm62'): ['S', ('n4', 'm63'), ('n7', 'm66')], ('n47', 'm119'): ['S', ('n49', 'm120'), ('n48', 'm121')], ('n116', 'm99'): ['S', ('n117', 'm100'), ('n148', 'm101')], ('n76', 'm85'): ['C', (None, None), (None, None)], ('n96', 'm193'): ['C', (None, None), (None, None)], ('n147', 'm15'): ['C', (None, None), (None, None)], ('n92', 'm197'): ['T', ('n94', 'm197'), ('n93', 'm198')], ('n19', 'm50'): ['C', (None, None), (None, None)], ('n32', 'm143'): ['C', (None, None), (None, None)], ('n68', 'm171'): ['C', (None, None), (None, None)], ('n87', 'm79'): ['C', (None, None), (None, None)], ('n91', 'm195'): ['S', ('n95', 'm196'), ('n92', 'm197')], ('n161', 'm104'): ['T', ('n162', 'm104'), ('n163', 'm108')], ('n72', 'm32'): ['C', (None, None), (None, None)], ('n133', 'm5'): ['S', ('n137', 'm6'), ('n134', 'm11')], ('n86', 'm147'): ['C', (None, None), (None, None)], ('n149', 'm109'): ['S', ('n151', 'm110'), ('n150', 'm111')], ('n29', 'm140'): ['S', ('n33', 'm141'), ('n30', 'm142')], ('n105', 'm158'): ['C', (None, None), (None, None)], ('n18', 'm93'): ['C', (None, None), (None, None)], ('n62', 'm164'): ['L', ('n62', 'm165'), (None, None)], ('n166', 'm198'): ['T', ('n167', 'm198'), ('n168', 'm111')], ('n26', 'm128'): ['S', ('n40', 'm129'), ('n27', 'm130')], ('n97', 'm173'): ['T', ('n98', 'm173'), ('n103', 'm157')], ('n152', 'm102'): ['T', ('n154', 'm102'), ('n153', 'm9')], ('n10', 'm76'): ['S', ('n20', 'm77'), ('n11', 'm86')], ('n43', 'm126'): ['C', (None, None), (None, None)], ('n153', 'm9'): ['C', (None, None), (None, None)], ('n45', 'm115'): ['L', ('n45', 'm116'), (None, None)], ('n114', 'm66'): ['C', (None, None), (None, None)], ('n83', 'm188'): ['C', (None, None), (None, None)], ('n16', 'm91'): ['C', (None, None), (None, None)], ('n95', 'm196'): ['C', (None, None), (None, None)], ('n101', 'm180'): ['C', (None, None), (None, None)], ('n125', 'm107'): ['C', (None, None), (None, None)], ('n9', 'm61'): ['C', (None, None), (None, None)], ('n1', 'm59'): ['C', (None, None), (None, None)], ('n71', 'm32'): ['C', (None, None), (None, None)], ('n104', 'm159'): ['C', (None, None), (None, None)], ('n155', 'm103'): ['T', ('n159', 'm103'), ('n156', 'm118')], ('n140', 'm4'): ['C', (None, None), (None, None)], ('n15', 'm92'): ['C', (None, None), (None, None)], ('n102', 'm153'): ['C', (None, None), (None, None)], ('n57', 'm83'): ['T', ('n75', 'm83'), ('n58', 'm189')], ('n99', 'm179'): ['S', ('n101', 'm180'), ('n100', 'm181')], ('n139', 'm7'): ['C', (None, None), (None, None)], ('n22', 'm122'): ['T', ('n23', 'm122'), ('n54', 'm178')], ('n11', 'm86'): ['T', ('n12', 'm86'), ('n19', 'm50')], ('n53', 'm123'): ['C', (None, None), (None, None)], ('n127', 'm120'): ['C', (None, None), (None, None)], ('n65', 'm167'): ['C', (None, None), (None, None)], ('n160', 'm104'): ['T', ('n161', 'm104'), ('n164', 'm167')], ('n89', 'm172'): ['S', ('n97', 'm173'), ('n90', 'm182')], ('n34', 'm145'): ['C', (None, None), (None, None)], ('n7', 'm66'): ['C', (None, None), (None, None)], ('n109', 'm63'): ['S', ('n113', 'm64'), ('n110', 'm65')], ('n149', 'm105'): ['L', ('n149', 'm109'), (None, None)], ('n151', 'm110'): ['C', (None, None), (None, None)], ('n13', 'm88'): ['S', ('n17', 'm89'), ('n14', 'm90')], ('n38', 'm134'): ['C', (None, None), (None, None)], ('n8', 'm61'): ['T', ('n9', 'm61'), ('n10', 'm76')], ('n136', 'm13'): ['C', (None, None), (None, None)], ('n27', 'm130'): ['L', ('n27', 'm132'), (None, None)], ('n51', 'm118'): ['C', (None, None), (None, None)], ('n54', 'm178'): ['T', ('n55', 'm178'), ('n56', 'm82')], ('n93', 'm198'): ['C', (None, None), (None, None)], ('n25', 'm124'): ['S', ('n41', 'm125'), ('n26', 'm128')], ('n41', 'm125'): ['S', ('n43', 'm126'), ('n42', 'm127')], ('n24', 'm124'): ['T', ('n25', 'm124'), ('n44', 'm113')], ('n130', 'm22'): ['C', (None, None), (None, None)], ('n159', 'm103'): ['C', (None, None), (None, None)], ('n132', 'm3'): ['S', ('n140', 'm4'), ('n133', 'm5')], ('n117', 'm100'): ['T', ('n118', 'm100'), ('n131', 'm2')], ('n96', 'm191'): ['L', ('n96', 'm193'), (None, None)], ('n119', 'm100'): ['T', ('n120', 'm100'), ('n129', 'm85')], ('n100', 'm181'): ['C', (None, None), (None, None)], ('n107', 'm58'): ['S', ('n115', 'm59'), ('n108', 'm60')], ('n128', 'm129'): ['C', (None, None), (None, None)], ('n30', 'm142'): ['S', ('n32', 'm143'), ('n31', 'm144')]}

# reconGraph = 
#{'m168': [None], 'm169': ['m171', 'm170', 'n69', 'n68'], 'm160': [None], 'm161': ['n73', 'm162', 'm163', 'n60'], 'm162': [None], 'm163': ['n67', 'm169', 'm164', 'n62'], 'm164': ['m168', 'n63', 'm165'], 'm165': ['n66', 'n63', 'n164', 'n160', 'm166', 'm167'], 'm166': [None], 'm167': [None], 'n38': [None], 'n39': [None], 'n30': ['n31', 'n32'], 'n31': [None], 'n32': [None], 'n33': [None], 'n34': [None], 'n35': ['n39', 'm133', 'm131', 'n36'], 'n36': ['n38', 'n37'], 'n37': [None], 'm195': ['n92', 'm197', 'm196', 'n95'], 'm194': ['m195', 'n92', 'n166', 'm198', 'n164'], 'm57': ['n106', 'n88', 'm58', 'm67'], 'm56': [None], 'm51': ['m57', 'm52'], 'm190': ['m194', 'n91', 'm191', 'n96'], 'm53': [None], 'm192': [None], 'm59': [None], 'm58': ['m60', 'm59', 'n115', 'n1', 'n2', 'n108'], 'm130': ['m132', 'm131', 'n35'], 'n85': [None], 'n84': [None], 'n87': [None], 'n86': [None], 'n81': ['n85', 'm154', 'm80', 'n82'], 'n80': ['m147', 'n86', 'n81', 'm80'], 'n83': [None], 'n82': ['n84', 'm188', 'n83', 'm81'], 'n89': ['n90', 'n97', 'm190'], 'n88': ['n106', 'n89', 'm58', 'm172'], 'n129': [None], 'n128': [None], 'n125': [None], 'n124': [None], 'n127': [None], 'n126': [None], 'n121': ['n127', 'm120', 'm100', 'n122'], 'n120': ['m100', 'n121', 'n128', 'm129'], 'n123': ['n125', 'n124', 'm100', 'm107'], 'n122': ['m100', 'n126', 'm129', 'n123'], 'n12': ['n13', 'n18', 'm88'], 'n13': ['m90', 'n17', 'n14'], 'n10': ['n11', 'm77', 'n20'], 'n11': ['n12', 'm86', 'n19', 'm50', 'm87'], 'n16': [None], 'n17': [None], 'n14': ['n16', 'n15'], 'n15': [None], 'n18': [None], 'n19': [None], 'm39': ['m40', 'm41'], 'm38': [None], 'm37': ['m39', 'm38'], 'm36': [None], 'm35': ['m37', 'm36'], 'm34': [None], 'm33': ['m35', 'm34'], 'm32': [None], 'm31': ['n70', 'm33', 'm32', 'n60'], 'm30': [None], 'n8': ['n9', 'n10', 'm76', 'm61'], 'm55': [None], 'm54': ['m55', 'm56'], 'm197': [None], 'm196': [None], 'm191': ['m193', 'm192'], 'm50': [None], 'm193': [None], 'm52': ['m54', 'm53'], 'm146': ['m147', 'n80', 'm148'], 'm147': [None], 'm144': [None], 'm145': [None], 'm142': ['n31', 'm144', 'n32', 'm143'], 'm143': [None], 'm140': ['n30', 'n33', 'm142', 'm141'], 'm141': [None], 'n143': ['n145', 'n144'], 'n142': ['n143', 'n146', 'm21'], 'n141': ['n142', 'n147', 'm15', 'm18'], 'n140': [None], 'n147': [None], 'n146': [None], 'm148': [None], 'm149': ['m150', 'm155'], 'n74': [None], 'n75': ['n76', 'n77'], 'n76': [None], 'n77': [None], 'n70': ['n71', 'n72', 'm32'], 'n71': [None], 'n72': [None], 'n73': [None], 'n109': ['n110', 'n113'], 'n78': ['m172', 'm78', 'n79', 'n88'], 'n79': ['n87', 'n80'], 'm198': [None], 'm11': ['m12', 'm17'], 'm10': [None], 'm13': [None], 'm12': ['m13', 'n136', 'm14', 'n135'], 'm15': [None], 'm14': ['n141', 'm15', 'm16'], 'm17': [None], 'm16': [None], 'm19': [None], 'm18': ['m19', 'm20'], 'n108': ['n114', 'm63', 'n109'], 'm5': ['m11', 'm12', 'm6', 'n137', 'n134'], 'm4': [None], 'm7': [None], 'm6': ['n139', 'm7', 'n138', 'm8'], 'm1': ['m25', 'n117', 'm2'], 'm0': ['m46', 'm1'], 'm3': ['m5', 'm4', 'n140', 'n133'], 'm2': ['n132', 'm18', 'n141', 'm3'], 'm9': [None], 'm8': ['m10', 'n152', 'm9'], 'm137': [None], 'm136': ['m137', 'm138'], 'm135': [None], 'm134': [None], 'm133': ['n38', 'm135', 'm134', 'n37'], 'm132': ['m136', 'n28', 'm133', 'n35'], 'm131': [None], 'm89': [None], 'm86': ['m87', 'm94'], 'm87': ['n13', 'm93', 'n18', 'm88'], 'm84': [None], 'm85': [None], 'm82': [None], 'm83': ['n77', 'm84', 'm85', 'n76', 'n119'], 'm80': ['n54', 'n82', 'm82', 'm81'], 'm138': ['m146', 'm139'], 'n161': ['n163', 'n162', 'm108', 'm104'], 'n160': ['n161', 'n164', 'm104', 'm167'], 'n163': [None], 'n162': [None], 'n165': [None], 'n164': ['m167', 'n165', 'm198', 'n166'], 'n167': [None], 'n166': ['n168', 'm111', 'm198', 'n167'], 'n168': [None], 'n9': [None], 'n58': ['n74', 'm161', 'm189', 'n59'], 'n59': ['n73', 'n60'], 'n56': [None], 'n57': ['n75', 'm189', 'm83', 'n58'], 'n54': ['n56', 'm178', 'n55', 'm82'], 'n55': [None], 'n52': [None], 'n53': [None], 'n50': [None], 'n51': [None], 'n149': ['n150', 'n151'], 'n114': [None], 'n115': [None], 'n116': ['n117', 'm101', 'n148'], 'n148': ['n149', 'm109', 'n152'], 'n110': ['m61', 'n111', 'n112', 'm65'], 'n111': [None], 'n112': [None], 'n113': [None], 'n118': ['m22', 'n130', 'n119', 'm100'], 'n119': ['m100', 'm85', 'n129', 'n120'], 'm119': ['n49', 'n121', 'm120', 'm121', 'n48'], 'm118': [None], 'm115': ['m116', 'm119', 'n46'], 'm114': [None], 'm117': [None], 'm116': ['m118', 'm117', 'n51', 'n46', 'n155', 'n156'], 'm111': [None], 'm110': [None], 'm113': ['m115', 'm114', 'n52', 'n45'], 'm112': ['n22', 'n21', 'm122', 'm113', 'n24'], 'n29': ['n30', 'n33', 'm142'], 'n28': ['n29', 'n34', 'm140'], 'n23': ['n53', 'n24'], 'n22': ['n23', 'n54', 'm178', 'm122'], 'n21': ['n22', 'm83', 'm122', 'n57'], 'm174': ['n22', 'n54', 'm178', 'm175'], 'n27': ['n28', 'n35', 'm139'], 'n26': ['n40', 'n27', 'm132'], 'n25': ['n41', 'm125', 'm128', 'n26'], 'm76': ['m86', 'n11', 'm77', 'n20'], 'm60': ['n8', 'm61', 'm62', 'n3', 'n110'], 'm61': [None], 'm62': ['m63', 'm66', 'n114', 'n4', 'n109', 'n7'], 'm63': ['m64', 'm65', 'n110', 'n113', 'n5', 'n6'], 'm64': [None], 'm65': [None], 'm66': [None], 'm67': ['m68', 'm69'], 'm68': [None], 'm69': ['m71', 'm70'], 'm188': [None], 'm189': [None], 'n145': [None], 'm182': ['m183', 'm190'], 'm183': ['n57', 'm189', 'n58', 'm184'], 'm180': [None], 'm181': [None], 'm186': [None], 'm187': [None], 'm184': ['m188', 'n82', 'm185'], 'm185': ['m186', 'm187'], 'm99': ['m100', 'm101', 'n148', 'n118', 'n120', 'n117', 'n121', 'n119', 'n123', 'n122'], 'm98': [None], 'n117': ['m100', 'n131', 'n118', 'm2'], 'n132': ['m5', 'n133', 'n140'], 'n133': ['m6', 'm12', 'n137', 'n134'], 'n130': [None], 'n131': ['n132', 'n141', 'm3'], 'n136': [None], 'n137': ['n138', 'n139'], 'n134': ['n136', 'n135'], 'n135': [None], 'n138': [None], 'n139': [None], 'm179': ['m180', 'm181', 'n101', 'n100'], 'm178': [None], 'm173': ['m179', 'n98', 'm174'], 'm172': ['m173', 'm182', 'n90', 'n97', 'm190'], 'm171': [None], 'm170': [None], 'm177': [None], 'm176': [None], 'm175': ['m177', 'm176'], 'm129': [None], 'm48': ['m49', 'n11', 'm50'], 'm49': [None], 'm42': ['m43', 'm44'], 'm43': [None], 'm40': [None], 'm41': ['m42', 'm45'], 'm46': ['m47', 'm74'], 'm47': ['m48', 'm51'], 'm44': [None], 'm45': [None], 'n98': ['m153', 'm179', 'n99', 'n102'], 'n99': ['n101', 'n100'], 'n92': ['n93', 'm197', 'm198', 'n94'], 'n93': [None], 'n90': ['m195', 'n91', 'n96'], 'n91': ['n92', 'n95'], 'n96': [None], 'n97': ['m173', 'n98', 'n103', 'm157'], 'n94': [None], 'n95': [None], 'n158': [None], 'n159': [None], 'n150': [None], 'n151': [None], 'n152': ['m102', 'm9', 'n153', 'n154'], 'n153': [None], 'n154': ['n160', 'n155'], 'n155': ['n159', 'm118', 'n156', 'm103'], 'n156': ['n158', 'm111', 'm118', 'n157'], 'n157': [None], 'n67': ['n69', 'n68'], 'n66': [None], 'n65': [None], 'n64': [None], 'n63': ['m168', 'n65', 'n64', 'm167'], 'n62': ['n66', 'n63'], 'n61': ['n67', 'm169', 'n62', 'm165'], 'n60': ['m163', 'n70', 'm32', 'n61'], 'n69': [None], 'n68': [None], 'm28': ['m29', 'm30'], 'm29': [None], 'm24': [None], 'm25': ['m26', 'm27'], 'm26': [None], 'm27': ['m28', 'm31'], 'm20': ['m24', 'n143', 'm21', 'n146'], 'm21': ['n144', 'n118', 'n145', 'm22', 'm23'], 'm22': [None], 'm23': [None], 'm124': ['n41', 'm125', 'm128', 'n26'], 'm125': ['m126', 'm127', 'n43', 'n42'], 'm126': [None], 'm127': [None], 'm120': [None], 'm121': [None], 'm122': ['m124', 'n24', 'n53', 'm123'], 'm123': [None], 'm91': [None], 'm90': ['m91', 'm92', 'n16', 'n15'], 'm93': [None], 'm92': [None], 'm95': ['m99', 'n106', 'm96'], 'm94': ['m95', 'm112'], 'm97': [None], 'm96': ['m98', 'm97'], 'n20': ['n21', 'n78'], 'm151': ['m153', 'm152', 'n98'], 'm150': ['m151', 'n81', 'm154'], 'm153': [None], 'm152': [None], 'm155': ['m161', 'n58', 'm156'], 'm154': [None], 'm157': ['m159', 'm158', 'n105', 'n104'], 'm156': ['m160', 'n97', 'm157'], 'm159': [None], 'm158': [None], 'n24': ['m124', 'm113', 'n44', 'n25'], 'n49': [None], 'n48': [None], 'm128': ['m132', 'm130', 'n40', 'm129', 'n27', 'n120', 'n122'], 'n41': ['n43', 'n42'], 'n40': [None], 'n43': [None], 'n42': [None], 'n45': ['n51', 'n46'], 'n44': ['n52', 'm116', 'n45'], 'n47': ['n49', 'n48'], 'n46': ['m117', 'm119', 'n50', 'n47'], 'n144': [None], 'm102': ['n161', 'm103', 'n155', 'm104', 'n160'], 'm103': [None], 'm100': [None], 'm101': ['m102', 'n152', 'm109', 'n149', 'm105'], 'm106': ['n161', 'm108', 'm107', 'n123'], 'm107': [None], 'm104': [None], 'm105': ['m109', 'm106'], 'm108': [None], 'm109': ['n166', 'm111', 'm110', 'n150', 'n151', 'n156'], 'm73': [None], 'm72': [None], 'm71': ['m73', 'm72'], 'm70': [None], 'm77': ['n57', 'n21', 'm78', 'n78', 'm83'], 'm88': ['m90', 'n17', 'n14', 'm89'], 'm75': ['n8', 'm76', 'm149'], 'm74': ['m172', 'n78', 'n88', 'm75'], 'm79': [None], 'm78': ['n87', 'm79', 'n81', 'n80', 'm80'], 'm139': ['n29', 'm145', 'n34', 'm140'], 'm81': [None], 'n107': ['n115', 'm62', 'n108'], 'n106': ['n107', 'm99', 'n116', 'm58'], 'n105': [None], 'n104': [None], 'n103': ['n105', 'n104'], 'n102': [None], 'n101': [None], 'n100': [None], 'n0': ['m60', 'n1', 'n2'], 'n1': [None], 'n2': ['n8', 'm62', 'n3'], 'n3': ['m63', 'n4', 'n7'], 'n4': ['n5', 'n6'], 'n5': [None], 'n6': [None], 'n7': [None]}


# Hroot = 'm0'

# H = {('h0', 'Larus_dominicanus'): ('h0', 'Larus_dominicanus', None, None), ('h14', 'h17'): ('h14', 'h17', ('h17', 'Procellaria_westlandica'), ('h17', 'h19')), ('h12', 'Diomedea_epomophora'): ('h12', 'Diomedea_epomophora', None, None), ('h0', 'h1'): ('h0', 'h1', ('h1', 'h6'), ('h1', 'h7')), ('h12', 'Pelagodroma_marina'): ('h12', 'Pelagodroma_marina', None, None), ('h7', 'Eudyptula_minor'): ('h7', 'Eudyptula_minor', None, None), ('h7', 'h9'): ('h7', 'h9', ('h9', 'Eudyptes_pachyrhynchus'), ('h9', 'Megadyptes_antipodes')), ('h13', 'h14'): ('h13', 'h14', ('h14', 'Pterodroma_inexpecta'), ('h14', 'h17')), ('h19', 'Puffinus_griseus'): ('h19', 'Puffinus_griseus', None, None), ('h17', 'h19'): ('h17', 'h19', ('h19', 'Puffinus_griseus'), ('h19', 'Puffinus_huttoni')), ('h9', 'Megadyptes_antipodes'): ('h9', 'Megadyptes_antipodes', None, None), ('h13', 'Pelecanoides_urinatrixia'): ('h13', 'Pelecanoides_urinatrixia', None, None), ('h19', 'Puffinus_huttoni'): ('h19', 'Puffinus_huttoni', None, None), 'hTop': ('Top', 'h0', ('h0', 'h1'), ('h0', 'Larus_dominicanus')), ('h6', 'h13'): ('h6', 'h13', ('h13', 'h14'), ('h13', 'Pelecanoides_urinatrixia')), ('h9', 'Eudyptes_pachyrhynchus'): ('h9', 'Eudyptes_pachyrhynchus', None, None), ('h14', 'Pterodroma_inexpecta'): ('h14', 'Pterodroma_inexpecta', None, None), ('h6', 'h12'): ('h6', 'h12', ('h12', 'Diomedea_epomophora'), ('h12', 'Pelagodroma_marina')), ('h1', 'h7'): ('h1', 'h7', ('h7', 'Eudyptula_minor'), ('h7', 'h9')), ('h1', 'h6'): ('h1', 'h6', ('h6', 'h12'), ('h6', 'h13')), ('h17', 'Procellaria_westlandica'): ('h17', 'Procellaria_westlandica', None, None)}

# P = {('p27', 'Austrogoniodes_conci'): ('p27', 'Austrogoniodes_conci', None, None), ('p44', 'Halipeurus_spadix'): ('p44', 'Halipeurus_spadix', None, None), ('p24', 'p31'): ('p24', 'p31', ('p31', 'p32'), ('p31', 'Trabeculus_flemingi')), 'pTop': ('Top', 'p3', ('p3', 'p4'), ('p3', 'Saemundssonia_tari')), ('p32', 'p35'): ('p32', 'p35', ('p35', 'Trabeculus_hexakon_2'), ('p35', 'Trabeculus_hexakon')), ('p35', 'Trabeculus_hexakon'): ('p35', 'Trabeculus_hexakon', None, None), ('p35', 'Trabeculus_hexakon_2'): ('p35', 'Trabeculus_hexakon_2', None, None), ('p3', 'Saemundssonia_tari'): ('p3', 'Saemundssonia_tari', None, None), ('p41', 'p43'): ('p41', 'p43', ('p43', 'p44'), ('p43', 'Halipeurus_falsus')), ('p25', 'Austrogonidoes_watersoni'): ('p25', 'Austrogonidoes_watersoni', None, None), ('p43', 'Halipeurus_falsus'): ('p43', 'Halipeurus_falsus', None, None), ('p43', 'p44'): ('p43', 'p44', ('p44', 'Halipeurus_diversus'), ('p44', 'Halipeurus_spadix')), ('p24', 'p30'): ('p24', 'p30', ('p30', 'Harrisoniella_hopkinsi'), ('p30', 'p39')), ('p25', 'p27'): ('p25', 'p27', ('p27', 'Austrogoniodes_cristati'), ('p27', 'Austrogoniodes_conci')), ('p39', 'p41'): ('p39', 'p41', ('p41', 'Halipeurus_pelagicus'), ('p41', 'p43')), ('p39', 'Halipeurus_consimilis'): ('p39', 'Halipeurus_consimilis', None, None), ('p31', 'p32'): ('p31', 'p32', ('p32', 'Trabeculus_schillingi'), ('p32', 'p35')), ('p3', 'p4'): ('p3', 'p4', ('p4', 'p24'), ('p4', 'p25')), ('p31', 'Trabeculus_flemingi'): ('p31', 'Trabeculus_flemingi', None, None), ('p44', 'Halipeurus_diversus'): ('p44', 'Halipeurus_diversus', None, None), ('p4', 'p25'): ('p4', 'p25', ('p25', 'Austrogonidoes_watersoni'), ('p25', 'p27')), ('p41', 'Halipeurus_pelagicus'): ('p41', 'Halipeurus_pelagicus', None, None), ('p32', 'Trabeculus_schillingi'): ('p32', 'Trabeculus_schillingi', None, None), ('p30', 'Harrisoniella_hopkinsi'): ('p30', 'Harrisoniella_hopkinsi', None, None), ('p27', 'Austrogoniodes_cristati'): ('p27', 'Austrogoniodes_cristati', None, None), ('p4', 'p24'): ('p4', 'p24', ('p24', 'p30'), ('p24', 'p31')), ('p30', 'p39'): ('p30', 'p39', ('p39', 'Halipeurus_consimilis'), ('p39', 'p41'))}

#phi = {'Austrogoniodes_conci': 'Megadyptes_antipodes', 'Trabeculus_flemingi': 'Puffinus_huttoni', 'Trabeculus_hexakon_2': 'Procellaria_westlandica', 'Trabeculus_hexakon': 'Puffinus_griseus', 'Halipeurus_consimilis': 'Pterodroma_inexpecta', 'Saemundssonia_tari': 'Larus_dominicanus', 'Halipeurus_falsus': 'Pelecanoides_urinatrixia', 'Austrogoniodes_cristati': 'Eudyptes_pachyrhynchus', 'Austrogonidoes_watersoni': 'Eudyptula_minor', 'Harrisoniella_hopkinsi': 'Diomedea_epomophora', 'Halipeurus_spadix': 'Puffinus_huttoni', 'Trabeculus_schillingi': 'Pterodroma_inexpecta', 'Halipeurus_pelagicus': 'Pelagodroma_marina', 'Halipeurus_diversus': 'Puffinus_griseus'}

# R = {('Trabeculus_hexakon_2', 'Procellaria_westlandica'): ['C', (None, None), (None, None)], ('p43', 'h13'): ['S', ('p44', 'h14'), ('Halipeurus_falsus', 'Pelecanoides_urinatrixia')], ('p30', 'h12'): ['S', ('Harrisoniella_hopkinsi', 'Diomedea_epomophora'), ('p39', 'Pelagodroma_marina')], ('p44', 'h14'): ['L', ('p44', 'h17'), (None, None)], ('Trabeculus_hexakon', 'Puffinus_griseus'): ['C', (None, None), (None, None)], ('p3', 'h0'): ['S', ('p4', 'h1'), ('Saemundssonia_tari', 'Larus_dominicanus')], ('Trabeculus_flemingi', 'h19'): ['L', ('Trabeculus_flemingi', 'Puffinus_huttoni'), (None, None)], ('Halipeurus_pelagicus', 'Pelagodroma_marina'): ['C', (None, None), (None, None)], ('Saemundssonia_tari', 'Larus_dominicanus'): ['C', (None, None), (None, None)], ('p4', 'h1'): ['S', ('p24', 'h6'), ('p25', 'h7')], ('p44', 'h17'): ['L', ('p44', 'h19'), (None, None)], ('Trabeculus_flemingi', 'h14'): ['L', ('Trabeculus_flemingi', 'h17'), (None, None)], ('p35', 'h17'): ['S', ('Trabeculus_hexakon_2', 'Procellaria_westlandica'), ('Trabeculus_hexakon', 'h19')], ('Halipeurus_spadix', 'Puffinus_huttoni'): ['C', (None, None), (None, None)], ('Austrogoniodes_cristati', 'Eudyptes_pachyrhynchus'): ['C', (None, None), (None, None)], ('Harrisoniella_hopkinsi', 'Diomedea_epomophora'): ['C', (None, None), (None, None)], ('Trabeculus_hexakon', 'h19'): ['L', ('Trabeculus_hexakon', 'Puffinus_griseus'), (None, None)], ('Austrogoniodes_conci', 'Megadyptes_antipodes'): ['C', (None, None), (None, None)], ('p31', 'h14'): ['D', ('p32', 'h14'), ('Trabeculus_flemingi', 'h14')], ('Halipeurus_diversus', 'Puffinus_griseus'): ['C', (None, None), (None, None)], ('Halipeurus_falsus', 'Pelecanoides_urinatrixia'): ['C', (None, None), (None, None)], ('Trabeculus_flemingi', 'h17'): ['L', ('Trabeculus_flemingi', 'h19'), (None, None)], ('p32', 'h14'): ['S', ('Trabeculus_schillingi', 'Pterodroma_inexpecta'), ('p35', 'h17')], ('p44', 'h19'): ['S', ('Halipeurus_diversus', 'Puffinus_griseus'), ('Halipeurus_spadix', 'Puffinus_huttoni')], ('p27', 'h9'): ['S', ('Austrogoniodes_cristati', 'Eudyptes_pachyrhynchus'), ('Austrogoniodes_conci', 'Megadyptes_antipodes')], ('Trabeculus_schillingi', 'Pterodroma_inexpecta'): ['C', (None, None), (None, None)], ('p39', 'Pelagodroma_marina'): ['T', ('p41', 'Pelagodroma_marina'), ('Halipeurus_consimilis', 'Pterodroma_inexpecta')], ('Trabeculus_flemingi', 'Puffinus_huttoni'): ['C', (None, None), (None, None)], ('Halipeurus_consimilis', 'Pterodroma_inexpecta'): ['C', (None, None), (None, None)], ('p31', 'h13'): ['L', ('p31', 'h14'), (None, None)], ('p24', 'h6'): ['S', ('p30', 'h12'), ('p31', 'h13')], ('p41', 'Pelagodroma_marina'): ['T', ('Halipeurus_pelagicus', 'Pelagodroma_marina'), ('p43', 'h13')], ('p25', 'h7'): ['S', ('Austrogonidoes_watersoni', 'Eudyptula_minor'), ('p27', 'h9')], ('Austrogonidoes_watersoni', 'Eudyptula_minor'): ['C', (None, None), (None, None)]}


# {'Pelecanoides_urinatrixia': [None], 'h9': ['Austrogoniodes_cristati', 'Megadyptes_antipodes', 'Austrogoniodes_conci', 'Eudyptes_pachyrhynchus'], 'Halipeurus_pelagicus': [None], 'Halipeurus_consimilis': [None], 'h0': ['Larus_dominicanus', 'h1', 'Saemundssonia_tari', 'p4'], 'h1': ['p25', 'p24', 'h6', 'h7'], 'h6': ['h12', 'h13', 'p41', 'p30', 'p31'], 'h7': ['Eudyptula_minor', 'p27', 'h9', 'Austrogonidoes_watersoni'], 'p3': ['h1', 'Saemundssonia_tari', 'p4'], 'p25': ['p27', 'h9', 'Austrogonidoes_watersoni'], 'Puffinus_griseus': [None], 'p27': ['Austrogoniodes_cristati', 'Austrogoniodes_conci'], 'Eudyptes_pachyrhynchus': [None], 'p44': ['Halipeurus_spadix', 'Halipeurus_diversus'], 'p43': ['h19', 'p44', 'Halipeurus_falsus'], 'p41': ['Pelagodroma_marina', 'h13', 'p43', 'Halipeurus_pelagicus'], 'Halipeurus_diversus': [None], 'Pelagodroma_marina': [None], 'Trabeculus_flemingi': [None], 'Trabeculus_hexakon_2': [None], 'Trabeculus_hexakon': [None], 'Halipeurus_falsus': [None], 'Megadyptes_antipodes': [None], 'Trabeculus_schillingi': [None], 'Puffinus_huttoni': [None], 'Procellaria_westlandica': [None], 'Austrogoniodes_cristati': [None], 'Saemundssonia_tari': [None], 'p39': ['Halipeurus_consimilis', 'Pelagodroma_marina', 'Pterodroma_inexpecta', 'p41'], 'p32': ['h17', 'Trabeculus_schillingi', 'p35'], 'p30': ['p39', 'Harrisoniella_hopkinsi'], 'p31': ['p32', 'h14', 'Trabeculus_flemingi'], 'Pterodroma_inexpecta': [None], 'Diomedea_epomophora': [None], 'p35': ['Trabeculus_hexakon_2', 'Trabeculus_hexakon'], 'h19': ['Puffinus_griseus', 'Halipeurus_spadix', 'Puffinus_huttoni', 'Halipeurus_diversus'], 'Austrogoniodes_conci': [None], 'p4': ['p25', 'p24', 'h6', 'h7'], 'p24': ['p30', 'p31', 'h12'], 'h12': ['p39', 'Pelagodroma_marina', 'p41', 'Diomedea_epomophora', 'Harrisoniella_hopkinsi'], 'h13': ['p31', 'Pelecanoides_urinatrixia', 'p44', 'h14', 'Halipeurus_falsus'], 'h14': ['p35', 'Trabeculus_schillingi', 'Pterodroma_inexpecta', 'p39', 'h17'], 'h17': ['h19', 'Trabeculus_hexakon', 'Trabeculus_hexakon_2', 'Procellaria_westlandica'], 'Larus_dominicanus': [None], 'Austrogonidoes_watersoni': [None], 'Harrisoniella_hopkinsi': [None], 'Eudyptula_minor': [None], 'Halipeurus_spadix': [None]}

# {'Pelecanoides_urinatrixia': [None], 'h9': ['Austrogoniodes_cristati', 'Megadyptes_antipodes', 'Austrogoniodes_conci', 'Eudyptes_pachyrhynchus'], 'Halipeurus_pelagicus': [None], 'Halipeurus_consimilis': [None], 'h0': ['Larus_dominicanus', 'h1', 'Saemundssonia_tari', 'p4'], 'h1': ['p25', 'p24', 'h6', 'h7'], 'h6': ['h12', 'h13', 'p41', 'p30', 'p31'], 'h7': ['Eudyptula_minor', 'p27', 'h9', 'Austrogonidoes_watersoni'], 'p3': ['h1', 'Saemundssonia_tari', 'p4'], 'p25': ['p27', 'h9', 'Austrogonidoes_watersoni'], 'Puffinus_griseus': [None], 'p27': ['Austrogoniodes_cristati', 'Austrogoniodes_conci'], 'Eudyptes_pachyrhynchus': [None], 'p44': ['Halipeurus_spadix', 'Halipeurus_diversus'], 'p43': ['h19', 'p44', 'Halipeurus_falsus'], 'p41': ['Pelagodroma_marina', 'h13', 'p43', 'Halipeurus_pelagicus'], 'Halipeurus_diversus': [None], 'Pelagodroma_marina': [None], 'Trabeculus_flemingi': [None], 'Trabeculus_hexakon_2': [None], 'Trabeculus_hexakon': [None], 'Halipeurus_falsus': [None], 'Megadyptes_antipodes': [None], 'Trabeculus_schillingi': [None], 'Puffinus_huttoni': [None], 'Procellaria_westlandica': [None], 'Austrogoniodes_cristati': [None], 'Saemundssonia_tari': [None], 'p39': ['Halipeurus_consimilis', 'Pelagodroma_marina', 'p41'], 'p32': ['h17', 'Trabeculus_schillingi', 'p35'], 'p30': ['p39', 'Harrisoniella_hopkinsi'], 'p31': ['p32', 'h14', 'Trabeculus_flemingi'], 'Pterodroma_inexpecta': [None], 'Diomedea_epomophora': [None], 'p35': ['Trabeculus_hexakon_2', 'Trabeculus_hexakon'], 'h19': ['Puffinus_griseus', 'Halipeurus_spadix', 'Puffinus_huttoni', 'Halipeurus_diversus'], 'Austrogoniodes_conci': [None], 'p4': ['p25', 'p24', 'h6', 'h7'], 'p24': ['p30', 'p31', 'h12'], 'h12': ['Pelagodroma_marina', 'p41', 'Diomedea_epomophora', 'Harrisoniella_hopkinsi'], 'h13': ['p31', 'Pelecanoides_urinatrixia', 'p44', 'h14', 'Halipeurus_falsus'], 'h14': ['p35', 'Trabeculus_schillingi', 'Pterodroma_inexpecta', 'p39', 'h17'], 'h17': ['h19', 'Trabeculus_hexakon', 'Trabeculus_hexakon_2', 'Procellaria_westlandica'], 'Larus_dominicanus': [None], 'Austrogonidoes_watersoni': [None], 'Harrisoniella_hopkinsi': [None], 'Eudyptula_minor': [None], 'Halipeurus_spadix': [None]}
# H = {('h2', 'h4'): ('h2', 'h4', ('h4', 'h8'), ('h4', 'h9')), ('h7', 'h14'): ('h7', 'h14', None, None), ('h3', 'h6'): ('h3', 'h6', ('h6', 'h12'), ('h6', 'h13')), ('h3', 'h7'): ('h3', 'h7', ('h7', 'h14'), ('h7', 'h15')), ('h1', 'h2'): ('h1', 'h2', ('h2', 'h4'), ('h2', 'h5')), ('h1', 'h3'): ('h1', 'h3', ('h3', 'h6'), ('h3', 'h7')), ('h5', 'h10'): ('h5', 'h10', None, None), 'hTop': ('Top', 'h1', ('h1', 'h2'), ('h1', 'h3')), ('h6', 'h13'): ('h6', 'h13', None, None), ('h5', 'h11'): ('h5', 'h11', None, None), ('h4', 'h9'): ('h4', 'h9', None, None), ('h6', 'h12'): ('h6', 'h12', None, None), ('h4', 'h8'): ('h4', 'h8', None, None), ('h2', 'h5'): ('h2', 'h5', ('h5', 'h10'), ('h5', 'h11')), ('h7', 'h15'): ('h7', 'h15', None, None)}

# P = {('p1', 'p3'): ('p1', 'p3', ('p3', 'p6'), ('p3', 'p7')), ('p6', 'p13'): ('p6', 'p13', None, None), ('p3', 'p7'): ('p3', 'p7', ('p7', 'p14'), ('p7', 'p15')), ('p1', 'p2'): ('p1', 'p2', ('p2', 'p4'), ('p2', 'p5')), ('p6', 'p12'): ('p6', 'p12', None, None), ('p4', 'p9'): ('p4', 'p9', None, None), ('p4', 'p8'): ('p4', 'p8', None, None), ('p2', 'p5'): ('p2', 'p5', ('p5', 'p10'), ('p5', 'p11')), ('p2', 'p4'): ('p2', 'p4', ('p4', 'p8'), ('p4', 'p9')), ('p7', 'p14'): ('p7', 'p14', None, None), ('p5', 'p10'): ('p5', 'p10', None, None), ('p3', 'p6'): ('p3', 'p6', ('p6', 'p12'), ('p6', 'p13')), ('p5', 'p11'): ('p5', 'p11', None, None), 'pTop': ('Top', 'p1', ('p1', 'p2'), ('p1', 'p3')), ('p7', 'p15'): ('p7', 'p15', None, None)}

# R = {('p1', 'h1'): ['S', ('p2', 'h2'), ('p3', 'h3')], 
# ('p2', 'h2'): ['S', ('p4', 'h4'), ('p5', 'h5')], 
# ('p4', 'h4'): ['L', ('p4', 'h9'), (None, None)], 
# ('p4', 'h9'): ['T', ('p8', 'h9'), ('p9', 'h5')], 
# ('p9', 'h5'): ['L', ('p9', 'h11'), (None, None)], 
# ('p5', 'h5'): ['L', ('p5', 'h10'), (None, None)], 
# ('p5', 'h10'): ['T', ('p11', 'h10'), ('p10', 'h4')], #guilty
# ('p10', 'h4'): ['L', ('p10', 'h8'), (None, None)], 
# ('p3', 'h3'): ['S', ('p6', 'h6'), ('p7', 'h7')], 
# ('p6', 'h6'): ['L', ('p6', 'h13'), (None, None)], 
# ('p6', 'h13'): ['T', ('p12', 'h13'), ('p13', 'h7')],  #guilty
# ('p13', 'h7'): ['L', ('p13', 'h15'), (None, None)], 
# ('p7', 'h7'): ['L', ('p7', 'h14'), (None, None)], 
# ('p7', 'h14'): ['T', ('p15', 'h14'), ('p14', 'h6')], 
# ('p14', 'h6'): ['L', ('p14', 'h12'), (None, None)],
# ('p10', 'h8'): ['C', (None, None), (None, None)], 
# ('p8', 'h9'): ['C', (None, None), (None, None)], 
# ('p11', 'h10'): ['C', (None, None), (None, None)], 
# ('p9', 'h11'): ['C', (None, None), (None, None)], 
# ('p14', 'h12'): ['C', (None, None), (None, None)], 
# ('p12', 'h13'): ['C', (None, None), (None, None)], 
# ('p15', 'h14'): ['C', (None, None), (None, None)], 
# ('p13', 'h15'): ['C', (None, None), (None, None)]}


# markingDict = {}
# reconGraph, transferList = buildReconciliation(H, P, R)
# Hroot = findRoot(H)
# markingDict[Hroot] = ['check']
# cycleNode = recurseChildren(reconGraph, markingDict, Hroot)
# newReconGraph, guiltyTransfer = deleteTransfer(reconGraph, markingDict, transferList, cycleNode)


	

